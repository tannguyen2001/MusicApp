"""Add music app models

Revision ID: 1158224d82e6
Revises: 1a31ce608336
Create Date: 2025-07-10 16:00:34.728930

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '1158224d82e6'
down_revision = '1a31ce608336'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genre',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color_code', sqlmodel.sql.sqltypes.AutoString(length=7), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('parent_genre_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['parent_genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('artist',
    sa.Column('stage_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('biography', sqlmodel.sql.sqltypes.AutoString(length=2000), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('banner_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('followers_count', sa.Integer(), nullable=False),
    sa.Column('monthly_listeners', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stage_name')
    )
    op.create_table('follow',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('follower_id', sa.Uuid(), nullable=False),
    sa.Column('following_id', sa.Uuid(), nullable=False),
    sa.Column('following_type', sa.Enum('SONG', 'ALBUM', 'PLAYLIST', 'ARTIST', 'USER', name='targettype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('like',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('target_id', sa.Uuid(), nullable=False),
    sa.Column('target_type', sa.Enum('SONG', 'ALBUM', 'PLAYLIST', 'ARTIST', 'USER', name='targettype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlist',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('is_collaborative', sa.Boolean(), nullable=False),
    sa.Column('follower_count', sa.Integer(), nullable=False),
    sa.Column('total_tracks', sa.Integer(), nullable=False),
    sa.Column('total_duration_ms', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('owner_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('searchhistory',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('query', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('result_type', sa.Enum('SONG', 'ALBUM', 'PLAYLIST', 'ARTIST', 'USER', name='targettype'), nullable=True),
    sa.Column('result_id', sa.Uuid(), nullable=True),
    sa.Column('searched_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('userlibrary',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('item_id', sa.Uuid(), nullable=False),
    sa.Column('item_type', sa.Enum('SONG', 'ALBUM', 'PLAYLIST', 'ARTIST', 'USER', name='targettype'), nullable=False),
    sa.Column('saved_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('album',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('release_date', sa.DateTime(), nullable=True),
    sa.Column('album_type', sa.Enum('SINGLE', 'EP', 'ALBUM', name='albumtype'), nullable=False),
    sa.Column('total_tracks', sa.Integer(), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=False),
    sa.Column('label', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('artist_id', sa.Uuid(), nullable=False),
    sa.Column('genre_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('song',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=False),
    sa.Column('track_number', sa.Integer(), nullable=False),
    sa.Column('disc_number', sa.Integer(), nullable=False),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('preview_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lyrics', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('explicit', sa.Boolean(), nullable=False),
    sa.Column('popularity_score', sa.Float(), nullable=False),
    sa.Column('play_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('album_id', sa.Uuid(), nullable=False),
    sa.Column('artist_id', sa.Uuid(), nullable=False),
    sa.Column('genre_id', sa.Uuid(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['album_id'], ['album.id'], ),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playhistory',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('song_id', sa.Uuid(), nullable=False),
    sa.Column('played_at', sa.DateTime(), nullable=False),
    sa.Column('duration_played_ms', sa.Integer(), nullable=False),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('skip_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('playlistsong',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('playlist_id', sa.Uuid(), nullable=False),
    sa.Column('song_id', sa.Uuid(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('added_by', sa.Uuid(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['added_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.id'], ),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('recommendation',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('song_id', sa.Uuid(), nullable=False),
    sa.Column('recommendation_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['song_id'], ['song.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('user', sa.Column('username', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('user', sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('user', sa.Column('date_of_birth', sa.DateTime(), nullable=True))
    op.add_column('user', sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True))
    op.add_column('user', sa.Column('is_premium', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('user', sa.Column('is_artist', sa.Boolean(), nullable=False, server_default=sa.text('false')))
    op.add_column('user', sa.Column('created_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=False, server_default=sa.text('now()')))
    op.create_unique_constraint(None, 'user', ['username'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'created_at')
    op.drop_column('user', 'is_artist')
    op.drop_column('user', 'is_premium')
    op.drop_column('user', 'country')
    op.drop_column('user', 'date_of_birth')
    op.drop_column('user', 'avatar_url')
    op.drop_column('user', 'username')
    op.drop_table('recommendation')
    op.drop_table('playlistsong')
    op.drop_table('playhistory')
    op.drop_table('song')
    op.drop_table('album')
    op.drop_table('userlibrary')
    op.drop_table('searchhistory')
    op.drop_table('playlist')
    op.drop_table('like')
    op.drop_table('follow')
    op.drop_table('artist')
    op.drop_table('genre')
    # ### end Alembic commands ###
